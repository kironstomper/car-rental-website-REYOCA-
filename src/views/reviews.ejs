<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Review Page</title>
    <!-- <link rel="stylesheet" type="text/css" href="../../public/styles.css"> -->
    <style>
        body{
      font-family: 'Rethink Sans', sans-serif;
      background: #F7F9F9;
    }
    .order-history-container{
      background: white;
      width: 90vw;
      margin: 0 auto;
      box-shadow:
      0px 1.8px 3.6px rgba(0, 0, 0, 0.017),
      0px 5px 10px rgba(0, 0, 0, 0.025),
      0px 12.1px 24.1px rgba(0, 0, 0, 0.033),
      0px 40px 80px rgba(0, 0, 0, 0.05)
    ;
      border-radius:15px;
      margin-top:50px;
      padding: 30px;
      box-sizing: border-box;
    }
    h2{
      color: #bc4749;
      margin-bottom:60px;
    }
    .filter-options{
      display: grid;
      grid-template-columns: repeat(6, 1fr);
      align-items:center;
      gap:10px;
      margin-bottom:20px;
    }
    .filter-options input{
      box-sizing: border-box;
      border-radius: 5px;
      padding:10px;
      border: 1px solid #D5D8DC;
      outline:none;
    }
    .filter-options button{
      background: #bc4749;
      color:white;
      padding:10px;
      font-size:14px;
      font-weight:500;
      border: none;
    }
    table{
      border-collapse: collapse;
      width:100%;
    }
    table th {
      padding: 12px;
      text-align: left;
      color: #bc4749;
    }
    table tr:nth-child(even){
      background-color: #f2f2f2;
    }
    table button{
      color: #bc4749;
      border: none;
      outline:none;
      background:transparent;
      cursor:pointer;
    }
    </style>
</head>
<body>
    <div class="review-history-container">
        <h2>Review Page</h2>

        <!-- Filter Options -->
        <div class="filter-options">
            <input type="text" id="filterStars" placeholder="Filter by Stars">
            <input type="text" id="filterKeyword" placeholder="Filter by Keyword">
            <button type="button" onclick="applyFilters()">Apply Filters</button>
        </div>

        <!-- Review Table -->
        <table id="reviewTable">
            <thead>
                <tr>
                    <th>Stars</th>
                    <th>Description</th>
                    <th>Rated By</th>
                    <th>Rated For</th>
                    <!-- Add more columns as needed -->
                </tr>
            </thead>
            <tbody>
                <% if (Array.isArray(review)) { %>
                    <% review.forEach(function(row) { %>
                        <tr>
                            <td><%= row.stars %></td>
                            <td><%= row.description %></td>
                            <td><%= row.username_by %></td>
                            <td><%= row.username_for %></td>
                            <td>
                                <% if (row.ratedBy === row.userID) { %>
                                    <!-- Delete Button for own reviews -->
                                    <button onclick="deleteReview('<%= row.id %>')">Delete</button>
                                <% } else { %>
                                    <!-- Report Button for others' reviews -->
                                    <button onclick="reportReview('<%= row.id %>')">Report</button>
                                <% } %>
                            </td>
                            
                        </tr>
                    <% }) %>
                <% } else { %>
                    <p>No reviews found.</p>
                <% } %>
                
            </tbody>
        </table>
    </div>

    <!-- Add any necessary JavaScript at the bottom -->
    <script>
        function applyFilters(){
            var data = {
                stars: document.getElementById('filterStars').value,
                description: document.getElementById('filterKeyword').value
            };
            fetch('/review/filterreview', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error); 
                } else {
                    updateReviewTable(data);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert(error);
                alert("An error occured");
            });
        }

        function updateReviewTable(data) {
            // Access the 'message' property to get the array of reviews
            var reviews = data.message || [];
            var tbody = document.getElementById('reviewTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = ''; // Clear existing content
        
            // Check if the reviews array is not empty
            if (Array.isArray(reviews) && reviews.length > 0) {
                // Iterate through each review in the array
                reviews.forEach(function(row) {
                    var buttonHTML = '';
                    if (row.ratedBy === row.userID) {
                        buttonHTML = '<button onclick="deleteReview(\'' + row.id + '\')">Delete</button>';
                    } else {
                        buttonHTML = '<button onclick="reportReview(\'' + row.id + '\')">Report</button>';
                    }
                    var tr = '<tr>' +
                                '<td>' + row.stars + '</td>' +
                                '<td>' + row.description + '</td>' +
                                '<td>' + row.username_by + '</td>' + 
                                '<td>' + row.username_for + '</td>' + 
                                '<td>' + buttonHTML + '</td>' +
                             '</tr>';
                    tbody.innerHTML += tr;
                });
            } else {
                // If the array is empty
                tbody.innerHTML = '<tr><td colspan="4">No reviews found.</td></tr>';
            }
        }
        
        
        
        
        
        function reportReview(reviewId) {
            window.location.href = 'http://localhost:3000/dev_page_route/profilepage/postreport';
        }
        
        function deleteReview(reviewId) {
            var data = {
                _ID: reviewId
            };
            fetch('/admin/deletereview', {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error); 
                } else {
                    location.reload();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred');
            });
        }
    </script>
</body>
</html>
