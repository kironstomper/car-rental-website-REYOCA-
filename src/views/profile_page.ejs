<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <!-- <link rel="stylesheet" type="text/css" href="../../public/styles.css"> Link to CSS -->
    <style>
        body{
  font-family: 'Rethink Sans', sans-serif;
  background: #F7F9F9;
}
button{
  outline:none;
  border:none;
  transition:0.3s ease;
  cursor:pointer;
}
button:hover{
  filter: brightness(90%)
}
.profile-container{
  background: white;
  width: 90vw;
  margin: 0 auto;
  box-shadow:
  0px 1.8px 3.6px rgba(0, 0, 0, 0.017),
  0px 5px 10px rgba(0, 0, 0, 0.025),
  0px 12.1px 24.1px rgba(0, 0, 0, 0.033),
  0px 40px 80px rgba(0, 0, 0, 0.05)
;
  border-radius:15px;
  margin-top:50px;
  padding: 30px;
  box-sizing: border-box;
}
h2{
  color: #bc4749;
  margin-bottom:60px;
}
.user-profile--container{
  display: flex;
  gap:20px;
  padding-bottom:20px;
  margin-bottom:20px;
  border-bottom:1px solid rgba(0,0,0,0.2);
}
.user-avatar--container{
  width:120px;
  flex-shrink:0;
}
.user--name{
  margin-top:10px;
}
.user--name h3{
  margin-bottom:0;
}
.user-avatar--container img{
  width:100%;
}
#updatePhotoButton{
  margin-top:10px;
  background: #fff;
  color:#bc4749;
  padding:10px;
  font-size:14px;
  font-weight:500;
  width:100%;
  box-sizing: border-box;
  border-radius: 5px;
  border:1px solid #bc4749;
}
#userRating{
  color: #F1C40F
}
.star-rating {
  display: inline-block;
}

.star {
  font-size: 20px;
  color: gray;
}

.star.golden {
  color: gold;
}
.btn--container{
  flex-shrink:0;
  width:300px;
  display: flex;
  flex-direction: column;
  border-left:1px solid rgba(0,0,0,0.2);
  padding-left:20px;
}
.btn--container button{
  border-bottom:1px solid rgba(0,0,0,0.2);
  background:transparent;
  padding:10px 0;
}
.user-bottom--container{
  display: flex;
  gap:20px;
}
.user-additional-details--container{
  flex-grow:1;
}
#logoutButton, #deleteButton{
  border-bottom: none;
}
#logoutButton{
  margin-top:10px;
  background: #fff;
  color:#bc4749;
  padding:7px;
  font-size:13px;
  font-weight:500;
  width:100%;
  box-sizing: border-box;
  border-radius: 5px;
  border:1px solid #bc4749;
}
    </style>
</head>
<body>
    <div class="profile-container">
        <h2>Profile</h2>
        <div class="user-profile--container">
          <div class="user-avatar--container">
              <img src="<%= profile.photo %>" alt="Profile Photo" style="display:block;">
              <button id="updatePhotoButton" onclick="triggerFileInput()">Update Photo</button>
        </div>
          <div class="user-profile--right">
          <div class="user--name">
          <h3 id="first_name" style="display: inline-block;"><%= profile.first_name %></h3>
              <h3 id="last_name" style="display: inline-block;"><%= profile.last_name %></h3>
          </div>
          <div style="display: flex; align-items: center;">
            <p id="user_rating_title" style="margin-right: 10px;">Rating:</p>
            <div id="userRating" class="star-rating">
                <% for (let i = 1; i <= 5; i++) { %>
                    <% if (i <= rating) { %>
                        <span class="star golden">&#9733;</span> <!-- Golden Star -->
                    <% } else { %>
                        <span class="star">&#9734;</span> <!-- Gray Star -->
                    <% } %>
                <% } %>
            </div>
          </div>
        </div>
        
              <!-- Add this under the profile photo -->
              
              
      
              <!-- Hidden File Input -->
              <input type="file" id="photoInput" style="display: none;" onchange="handleFileChange()">
              <p></p>
              
              <div class="user-bottom--container">
            <div class="user-additional-details--container">
      
              <div style="display: flex; align-items: center;">
                  <p style="margin-right: 10px;">Gender:</p>
                  <div id="gender" class="gender-dropdown">
                      <select style="display: none;">
                          <option value="male">Male</option>
                          <option value="female">Female</option>
                          <option value="other">Other</option>
                      </select>
                      <p style="margin: 0;"><%= profile.gender %></p>
                  </div>
              </div>
              <div style="display: flex; align-items: center;">
                  <p id="phone_title" style="margin-right: 10px;">Phone:</p>
                  <p id="phone" style="margin: 0;"><%= profile.phone %></p>
              </div>

              <div style="display: flex; align-items: center;">
                <p id="email_title" style="margin-right: 10px;">Email:</p>
                <p id="email" style="margin: 0;"><%= profile.email %></p>
            </div>
              
      
              <div style="display: flex; align-items: center;">
                  <p style="margin-right: 10px;">Government ID:</p>
                  <div id="government_id_container" style="flex-grow: 1;">
                      <p id="government_id" style="display: none; margin: 0;"><%= profile.government_id %></p>
                      <button id="btn_hide" onclick="toggleGovernmentID()">Unhide</button>
                  </div>
              </div>
              </div>
            <div class="btn--container">
      
              <button type="button" id="editButton" onclick="editProfile()">Edit</button>
              <button type="button" onclick="orderHistory()">View Order History</button>
              <button type="button" onclick="viewReviews()">View Reviews</button>
              <button type="button" id="updatepassword" onclick="updatepassword()">Update Password</button>
              <button type="button" id="deleteButton" onclick="deleteAccount()">Delete Account</button>
              <button type="button" id="logoutButton" onclick="logout()">Logout</button>
      </div>
          </div>
      
          </div>

    <script>
        let isEditing = false;

        function toggleGovernmentID() {
            const govIdElement = document.getElementById('government_id');
            const btnUnhide = document.getElementById('btn_hide');
            govIdElement.style.display = govIdElement.style.display === 'none' ? '' : 'none';
            btnUnhide.textContent = btnUnhide.textContent === "Unhide" ? "Hide" : "Unhide";
        }

        function editProfile() {
            if (!isEditing) {
                makeEditable('first_name');
                makeEditable('last_name');
                const genderElement = document.getElementById('gender');
                const genderValue = genderElement.innerText;
                genderElement.innerHTML = `<select>
                                              <option value="male">Male</option>
                                              <option value="female">Female</option>
                                              <option value="other">Other</option>
                                           </select>`;
                genderElement.querySelector('select').value = genderValue.toLowerCase();

                makeEditable('phone');
                makeEditable('email');
                makeEditable('government_id');
                document.getElementById('editButton').innerText = 'Save';
            } else {
                const updatedProfile = {
                    first_name: document.getElementById('first_name').querySelector('input').value,
                    last_name: document.getElementById('last_name').querySelector('input').value,
                    gender: document.getElementById('gender').querySelector('select').value,
                    phone: document.getElementById('phone').querySelector('input').value,
                    email: document.getElementById('email').querySelector('input').value,
                    government_id: document.getElementById('government_id').querySelector('input').value
                };
        
                fetch('/profile/updateprofile', { // Update this URL to your actual server route
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updatedProfile),
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Success:', data);
                    // Refresh the page or update the UI to reflect changes
                    location.reload(); // Reload the page to show updated data
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
        
                document.getElementById('editButton').innerText = 'Edit';
                isEditing = false;
            }
            isEditing = !isEditing;
        }

        function makeEditable(id) {
            const element = document.getElementById(id);
            const value = element.innerText;
            element.innerHTML = `<input type="text" value="${value}">`;
        }

        function orderHistory() {
            window.location.href = '/dev_page_route/profilepage/orderhistory';
        }

        function viewReviews() {
          window.location.href = '/dev_page_route/profilepage/reviews';
        }

        function updatepassword() {
          window.location.href = '/dev_page_route/profilepage/updatepassword';
        }

        function deleteAccount() {
            if (confirm('Are you sure you want to delete your account? This cannot be undone.')) {
              fetch('/admin/deleteuser', {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' }
                
              })
              .then(response => response.json())
              .then(data => {
                  if (data.error) {
                      alert(data.error); // or display the error message in the UI
                  } else {
                      alert('User deleted successfully');
                      // Additional logic after successful deletion (like redirecting)
                  }
              })
              .catch(error => {
                  console.error('Error:', error);
                  alert('An error occurred');
              });
            }
        }
    
        function logout() {
          fetch('/login/logout', {
              method: 'GET',
              headers: { 'Content-Type': 'application/json' }
              
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error); // or display the error message in the UI
                } else {
                    alert('Logout Successful');
                    window.location.href = "http://localhost:3000"
                    // Additional logic after successful deletion (like redirecting)
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred');
            });
          }

        function triggerFileInput() {
            document.getElementById('photoInput').click();
        }
    
        function handleFileChange() {
          const fileInput = document.getElementById('photoInput');
          if (fileInput.files.length > 0) {
              const file = fileInput.files[0];
              console.log('Selected file:', file);
      
              // Check if the file is an image
              if (file.type.match('image.*')) {
                  // It's an image file, proceed with the upload
                  uploadFile(file);
              } else {
                  // Not an image file, display an alert
                  alert('Invalid file type. Please select an image file.');
              }
          }
      }
      
    
        // Optional: Function to display file name
        function displayFileName(fileName) {
            // Logic to display the selected file name
            alert('Selected file: ' + fileName);
        }
    
        // Optional: Function to upload file
        function uploadFile(filedata) {
          const formData = new FormData();
          formData.append('file', filedata);
            // alert(data)
            fetch('http://localhost:3000/profile/updatepic', {
                method: 'POST',
                // headers: { 'Content-Type': 'multipart/form-data;' },
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.message) {
                    alert(data.message); 
                    location.reload();
                } else {
                    alert("error uploading file");
                    // password.setCustomValidity(data.found_bad_words.toString());
                    location.reload();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred');
            });
            // alert('File upload functionality not implemented');
        }
    </script>
</body>
</html>
